@using Domain.Repositories.Interfaces
@using Model.Entites
@inject IRepositoryAsync<AllergenDishesJT> AllergensDishesJTRepositoryAsync
@inject IRepositoryAsync<Allergens> AllergensRepositoryAsync
@rendermode InteractiveServer
<div class="card dish d-flex @((Dish.IsOutOfStock ? "opacity-75" : "")) ">
    <div class="row flex-grow-1">
        <div class="col-9">
            <div class="row h-100 ps-3">
                <div class="col-12 ">
                    <div class="d-flex flex-row flex-wrap">
                        <h1>@Dish.Name</h1><p>(@Dish.Code)</p>
                    </div>
                </div>
                <div class="col-12  description">
                    @Dish.Description
                </div>
                <div class="col-12 d-flex ">
                    <p class="price mt-auto">
                        @Dish.Price
                    </p>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="row h-100">
                <div class="col-12 d-flex justify-content-center pe-0">
                    <button class="addBtn btn" @onclick="OnAddToCart" disabled="@Dish.IsOutOfStock">+</button>
                </div>
                <div class="col-12 d-flex justify-content-center mt-auto">
                    <div class="Allergene @(showTooltip ? "active" : "")" @onclick="ToggleTooltip">
                        <i class="bi bi-info-circle-fill info-icon"></i>
                        <span class="tooltiptext">Allergen</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
</div>

@code {
    [Parameter] public Dish Dish { get; set; } 
    [Parameter] public AllergenDishesJT AllergenDishesJt { get; set; }
    [Parameter] public EventCallback OnAddToCart { get; set; }
    
    private bool showTooltip = false;
    
    private void ToggleTooltip()
    {
        showTooltip = !showTooltip;
    }
}