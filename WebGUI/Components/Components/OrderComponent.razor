@using Domain.Repositories.Interfaces
@using Model.Entites
@inject IRepositoryAsync<AllergenDishesJT> AllergensDishesJTRepositoryAsync
@inject IRepositoryAsync<Allergens> AllergensRepositoryAsync
@rendermode InteractiveServer

<div class="card dish d-flex position-relative @((Dish.IsOutOfStock ? "opacity-75" : "")) p-3 pe-0" style="">
    <div class="row w-100">
        <div class="col-9 d-flex flex-column h-100">
            <div class="ps-2">
                <div class="d-flex flex-wrap align-items-center mb-2">
                    <h1 class="h6 mb-0 me-2">@Dish.Name</h1>
                </div>
            </div>

            <div class="mt-auto d-flex justify-content-start align-items-center ps-2">
                <p class="price fw-bold mb-0">@Dish.Price.ToString("C")</p>
            </div>
        </div>

        <div class="col-3 d-flex align-items-end justify-content-end pe-3">
            <div class="d-flex justify-content-between align-items-center bg-light rounded-pill px-3 py-1 shadow-sm">
                <button class="btn btn-link p-0 m-0" @onclick="Remove" style="color: #113; font-size: 1.2rem;">
                    <i class="bi bi-trash"></i>
                </button>
                <span class="mx-2">@quantity</span>
                <button class="btn btn-link p-0 m-0" @onclick="Increase" style="color: #113; font-size: 1.2rem;">
                    <i class="bi bi-plus"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Dish Dish { get; set; }
    [Parameter] public EventCallback OnRemove { get; set; }
    private List<Dish> Dishes = new();

    private int quantity = 1;
   

    private void Increase()
    {
        quantity++;
        Console.WriteLine("pushed me bisch");
    }

    private void Remove()
    {
        // Beispiel: Callback zum Entfernen aus dem Warenkorb oder Liste
        OnRemove.InvokeAsync();
    }
}